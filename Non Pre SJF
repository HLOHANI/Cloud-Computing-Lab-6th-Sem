//SJF Non Pre-emptive
//CODE by HIMANSHU LOHANI on 07/01/2022
//CC Lab1
#include<stdio.h>
 int main()
{
    int numOfProcess; 
    printf("Enter total number of processes -> ");
    scanf("%d",&numOfProcess);
    int burstTime[numOfProcess],process[numOfProcess],waitTime[numOfProcess],turnAroundTime[numOfProcess],i,j,total=0,pos,temp;
    float avgWaitTime,avgTurnAroundTime;
    
    
  
    printf("\nEnter Burst Time:-\n");
    for(i=0;i<numOfProcess;i++)
    {
        printf("process %d -> ",i+1);
        scanf("%d",&burstTime[i]);
        process[i]=i+1;         
    }
  
   //sorting of burst times
    for(i=0;i<numOfProcess;i++)
    {
        pos=i;
        for(j=i+1;j<numOfProcess;j++)
        {
            if(burstTime[j]<burstTime[pos])
                pos=j;
        }
  
        temp=burstTime[i];
        burstTime[i]=burstTime[pos];
        burstTime[pos]=temp;
  
        temp=process[i];
        process[i]=process[pos];
        process[pos]=temp;
    }
   
    waitTime[0]=0;            
  
   
    for(i=1;i<numOfProcess;i++)
    {
        waitTime[i]=0;
        for(j=0;j<i;j++)
            waitTime[i]+=burstTime[j];
  
        total += waitTime[i];
    }
  
    avgWaitTime=(float)total/numOfProcess;      
    total=0;
  
    printf("\nProcess\t    Burst Time    \tWaiting Time\t Turnaround Time");
    for(i=0;i<numOfProcess;i++)
    {
        turnAroundTime[i]=burstTime[i] + waitTime[i];   
        total+=turnAroundTime[i];
        printf("\nprocess %d\t\t  %d\t\t\t    %d\t\t\t\t%d",process[i],burstTime[i],waitTime[i],turnAroundTime[i]);
    }
  
    avgTurnAroundTime=(float)total/numOfProcess;    
    printf("\n\nAverage Waiting Time -> %f",avgWaitTime);
    printf("\nAverage Turnaround Time -> %f\n",avgTurnAroundTime);
}
